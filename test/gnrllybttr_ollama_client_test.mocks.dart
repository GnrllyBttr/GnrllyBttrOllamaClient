// Mocks generated by Mockito 5.4.5 from annotations
// in gnrllybttr_ollama_client/test/gnrllybttr_ollama_client_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes

// ðŸŽ¯ Dart imports:
import 'dart:async' as _i5;

// ðŸ“¦ Package imports:
import 'package:mockito/mockito.dart' as _i1;

// ðŸŒŽ Project imports:
import 'package:gnrllybttr_ollama_client/src/models/models.dart' as _i2;
import 'package:gnrllybttr_ollama_client/src/values/values.dart' as _i4;

import 'package:gnrllybttr_ollama_client/src/abstracts/gnrllybttr_rest_service.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpResponse_0 extends _i1.SmartFake implements _i2.HttpResponse {
  _FakeHttpResponse_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [GnrllyBttrRestService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGnrllyBttrRestService extends _i1.Mock
    implements _i3.GnrllyBttrRestService {
  MockGnrllyBttrRestService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i4.RequestInterceptor> get requestInterceptors => (super.noSuchMethod(
        Invocation.getter(#requestInterceptors),
        returnValue: <_i4.RequestInterceptor>[],
      ) as List<_i4.RequestInterceptor>);

  @override
  List<_i4.ResponseInterceptor> get responseInterceptors => (super.noSuchMethod(
        Invocation.getter(#responseInterceptors),
        returnValue: <_i4.ResponseInterceptor>[],
      ) as List<_i4.ResponseInterceptor>);

  @override
  void addRequestInterceptor(_i4.RequestInterceptor? interceptor) =>
      super.noSuchMethod(
        Invocation.method(#addRequestInterceptor, [interceptor]),
        returnValueForMissingStub: null,
      );

  @override
  void addResponseInterceptor(_i4.ResponseInterceptor? interceptor) =>
      super.noSuchMethod(
        Invocation.method(#addResponseInterceptor, [interceptor]),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i2.HttpResponse> get({
    required String? path,
    Map<String, dynamic>? queryParameters,
    _i2.HttpOptions? options,
    _i2.HttpCancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#get, [], {
          #path: path,
          #queryParameters: queryParameters,
          #options: options,
          #cancelToken: cancelToken,
        }),
        returnValue: _i5.Future<_i2.HttpResponse>.value(
          _FakeHttpResponse_0(
            this,
            Invocation.method(#get, [], {
              #path: path,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            }),
          ),
        ),
      ) as _i5.Future<_i2.HttpResponse>);

  @override
  _i5.Future<_i2.HttpResponse> post({
    required String? path,
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.HttpOptions? options,
    _i2.HttpCancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#post, [], {
          #path: path,
          #data: data,
          #queryParameters: queryParameters,
          #options: options,
          #cancelToken: cancelToken,
        }),
        returnValue: _i5.Future<_i2.HttpResponse>.value(
          _FakeHttpResponse_0(
            this,
            Invocation.method(#post, [], {
              #path: path,
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            }),
          ),
        ),
      ) as _i5.Future<_i2.HttpResponse>);

  @override
  _i5.Future<_i2.HttpResponse> put({
    required String? path,
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.HttpOptions? options,
    _i2.HttpCancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#put, [], {
          #path: path,
          #data: data,
          #queryParameters: queryParameters,
          #options: options,
          #cancelToken: cancelToken,
        }),
        returnValue: _i5.Future<_i2.HttpResponse>.value(
          _FakeHttpResponse_0(
            this,
            Invocation.method(#put, [], {
              #path: path,
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            }),
          ),
        ),
      ) as _i5.Future<_i2.HttpResponse>);

  @override
  _i5.Future<_i2.HttpResponse> delete({
    required String? path,
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.HttpOptions? options,
    _i2.HttpCancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#delete, [], {
          #path: path,
          #data: data,
          #queryParameters: queryParameters,
          #options: options,
          #cancelToken: cancelToken,
        }),
        returnValue: _i5.Future<_i2.HttpResponse>.value(
          _FakeHttpResponse_0(
            this,
            Invocation.method(#delete, [], {
              #path: path,
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            }),
          ),
        ),
      ) as _i5.Future<_i2.HttpResponse>);

  @override
  _i5.Future<_i2.HttpResponse> head({
    required String? path,
    Map<String, dynamic>? queryParameters,
    _i2.HttpOptions? options,
    _i2.HttpCancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#head, [], {
          #path: path,
          #queryParameters: queryParameters,
          #options: options,
          #cancelToken: cancelToken,
        }),
        returnValue: _i5.Future<_i2.HttpResponse>.value(
          _FakeHttpResponse_0(
            this,
            Invocation.method(#head, [], {
              #path: path,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            }),
          ),
        ),
      ) as _i5.Future<_i2.HttpResponse>);

  @override
  _i5.Stream<String> stream({
    required String? path,
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.HttpOptions? options,
    _i2.HttpCancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#stream, [], {
          #path: path,
          #data: data,
          #queryParameters: queryParameters,
          #options: options,
          #cancelToken: cancelToken,
        }),
        returnValue: _i5.Stream<String>.empty(),
      ) as _i5.Stream<String>);
}
